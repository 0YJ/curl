<testcase>
<info>
<keywords>
FTP
PORT
RETR
NODATACONN425
</keywords>
</info>
# Server-side
<reply>
<data nocheck="yes">
some bytes
</data>
<servercmd>
NODATACONN425
</servercmd>
</reply>

# Client-side
<client>
<server>
ftp
</server>
 <name>
FTP PORT and 425 on download
 </name>
 <command>
--max-time %FTPTIME2 ftp://%HOSTIP:%FTPPORT/1206 -P -
</command>

</client>

# Verify data after the test has been "shot"
<verify>
<strippart>
s/^EPRT \|1\|(.*)/EPRT \|1\|/
</strippart>

# The protocol part does not include QUIT simply because the error is
# CURLE_OPERATION_TIMEDOUT (28) which is a generic timeout error without
# specificly saying for which connection it concerns, and for timeouts libcurl
# marks the control channel as "invalid". As this test case times out for the
# data connection it could still use the control channel.
<protocol>
USER anonymous
PASS ftp@example.com
PWD
EPRT |1|
TYPE I
SIZE 1206
RETR 1206
</protocol>
<errorcode>
28
</errorcode>
</verify>
</testcase>
